# SPDX-FileCopyrightText: 2024 Howetuft
#
# SPDX-License-Identifier: Apache-2.0

name: windows-oidn
description: LuxCore Python Wheels - Prepare OIDN for Windows
inputs:
  job-id:
    description: 'Job unique identifier (for caching)'
    required: true
    type: string
runs:
  using: 'composite'
  steps:
    - name: Create directory
      run: |
        mkdir '${{github.workspace}}\oidn'
      shell: pwsh

    # - name: Restore Cache
    #   uses: actions/cache@v4
    #   with:
    #     path: '${{ runner.workspace }}\boost_*.tar.gz'
    #     key: 'boost-${{ inputs.job-id }}-${{ env.BOOST_VERSION }}'

    - name: Export Boost user config
      env:
        boost_user_config: |
          using msvc : : "sccache cl" ;
      run: |
        echo "$boost_user_config" > $HOME/user_config.bjam
      shell: bash
    
    - name: Create vcpkg overlay
      working-directory: '${{github.workspace}}\boost\boost\stage'
      env:
        boost_vcpkg: >
          {
            "name": "oidn",
            "version": "${{ env.BOOST_VERSION }}",
            "port-version": 1,
            "features": {},
            "dependencies": [
              {
                "name": "vcpkg-cmake",
                "host": true
              },
              {
                "name": "vcpkg-cmake-config",
                "host": true
              }
            ]
          }
        boost_portfile: |
          message(STATUS "Running OIDN portfile")
          vcpkg_check_linkage(ONLY_STATIC_LIBRARY)
          # TODO specify version
          vcpkg_download_distfile(
            out_oidn_zip
            URL https://github.com/RenderKit/oidn/releases/download/v2.3.0/oidn-2.3.0.x64.windows.zip
            FILENAME oidn.zip
            SKIP_SHA512 true
          )
          vcpkg_extract_source_archive(
            out_oidn
            ARCHIVE out_oidn_zip
          )
          vcpkg_cmake_configure(SOURCE_PATH "${oidn_path}")
          vcpkg_cmake_config_fixup(
            PACKAGE_NAME "boost_python${PV}"
            CONFIG_PATH "share/boost_python-${{ env.BOOST_VERSION }}"  # TODO
          )
          vcpkg_cmake_install()
          # TODO End here
          
          file(TO_CMAKE_PATH [=[${{ github.workspace }}\boost\boost\stage]=] SRC_PATH)
          set(VCPKG_POLICY_EMPTY_INCLUDE_FOLDER enabled)
          set(VCPKG_POLICY_SKIP_COPYRIGHT_CHECK enabled)
          vcpkg_cmake_configure(SOURCE_PATH "${SRC_PATH}")
          vcpkg_cmake_config_fixup(
            PACKAGE_NAME "boost_python${PV}"
            CONFIG_PATH "share/boost_python-${{ env.BOOST_VERSION }}"  # TODO
          )
          vcpkg_cmake_install()
        boost_cmakelists: |
          message(STATUS "Running oidn CMakeLists")
          set(PV 3${{ matrix.python-minor }})
          project(oidn)
          install(
            DIRECTORY "bin"
            TYPE BIN
          )
          install(
            DIRECTORY "lib"
            TYPE LIB
          )
          install(
            DIRECTORY "include"
            TYPE INCLUDE
          )
      run: |
        echo "$boost_vcpkg" > vcpkg.json
        echo "$boost_portfile" > portfile.cmake
        echo "$boost_cmakelists" > CMakeLists.txt
      shell: bash

    # - name: Save Cache
    #   uses: actions/cache/save@v4
    #   with:
    #     path: '${{ runner.workspace }}\boost_*.tar.gz'
    #     key: 'boost-${{ inputs.job-id }}-${{ env.BOOST_VERSION }}'


      # - name: Oidn overlay
      #   id: oidn-overlay
      #   env:
      #     oidn_version: "2.3.0"
      #     oidn_vcpkg: >
      #       {
      #         "name": "oidn",
      #         "version": "$oidn_version",
      #         "port-version": 1,
      #         "features": {},
      #         "dependencies": [
      #           {
      #             "name": "vcpkg-cmake",
      #             "host": true
      #           },
      #           {
      #             "name": "vcpkg-cmake-config",
      #             "host": true
      #           }
      #         ]
      #       }

      #     oidn_portfile: |
      #       message(STATUS "Running oidn portfile")
      #       mkdir ${{ github.workspace }}/oidn
      #       cd ${{ github.workspace }}/oidn
      #       vcpkg_download_distfile(
      #         download_path
      #         URLS https://github.com/RenderKit/oidn/releases/download/v${oidn_version}/oidn-${oidn_version}.x64.windows.zip
      #         FILENAME oidn-${{ matrix.python-minor }}.zip
      #         SKIP_SHA512 True  # TODO
      #       )
      #       vcpkg_extract_source_archive(
      #         oidn_path
      #         ARCHIVE download_path
      #       )
      #       vcpkg_cmake_configure(SOURCE_PATH "${oidn_path}")
      #       vcpkg_cmake_config_fixup(
      #         PACKAGE_NAME "oidn"
      #       )
      #       vcpkg_cmake_install()

      #     oidn_cmakelists: |
      #       project(oidn)
      #       message(STATUS "Running oidn CMakeLists")
      #       set(oidn_root "${oidn_workspace}/oidn-${oidn_version}.x64.windows")
      #       message("Installing oidn at ${oidn_root}")

      #       install(
      #         DIRECTORY ${oidn_root}/bin
      #         TYPE BIN
      #       )
      #       install(
      #         DIRECTORY ${oidn_root}/include
      #         TYPE INCLUDE
      #       )
      #       install(
      #         DIRECTORY ${oidn_root}/lib
      #         TYPE LIB
      #       )
      #   run: |
      #     echo "$oidn_vcpkg" > vcpkg.json
      #     echo "$oidn_portfile" > portfile.cmake
      #     echo "$oidn_cmakelists" > CMakeLists.txt
      #   shell: bash