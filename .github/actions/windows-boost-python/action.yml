# SPDX-FileCopyrightText: 2024 Howetuft
#
# SPDX-License-Identifier: Apache-2.0

name: windows-python-boost
description: LuxCore Python Wheels - Build boost-python & boost-numpy for Windows build
inputs:
  job-id:
    description: 'Job unique identifier (for caching)'
    required: true
    type: string
runs:
  using: 'composite'
  steps:
    - name: Create directory
      run: |
        mkdir '${{github.workspace}}\boost'
      shell: pwsh

    - name: Restore Cache
      uses: actions/cache@v4
      with:
        path: '${{ runner.workspace }}\boost_*.tar.gz'
        key: 'boost-${{ inputs.job-id }}-${{ env.boost_version }}'

    - name: Export Boost user config
      env:
        boost_user_config: |
          using msvc : : "sccache cl" ;
      run: |
        echo "$boost_user_config" > user_config.bjam
      shell: bash
          

    
    - name: Build boost-python
      uses: egor-tensin/build-boost@v1
      with:
        version: ${{ env.BOOST_VERSION }}
        libraries: python
        platform: x64
        configuration: Release
        static: 1
        toolset: vs2022
        directory: '${{github.workspace}}\boost\boost'

    - name: Create vcpkg overlay
      working-directory: '${{github.workspace}}\boost\boost\stage'
      env:
        boost_vcpkg: >
          {
            "name": "boost-python",
            "version": "${{ env.BOOST_VERSION }}""
            "port-version": 1,
            "features": {},
            "dependencies": [
              {
                "name": "vcpkg-cmake",
                "host": true
              },
              {
                "name": "vcpkg-cmake-config",
                "host": true
              }
            ]
          }
        boost_portfile: |
          message(STATUS "Running boost-python portfile")
          vcpkg_check_linkage(ONLY_STATIC_LIBRARY)
          file(TO_CMAKE_PATH [=[${{ github.workspace }}\boost\boost\stage]=] SRC_PATH)
          set(VCPKG_POLICY_EMPTY_INCLUDE_FOLDER enabled)
          set(VCPKG_POLICY_SKIP_COPYRIGHT_CHECK enabled)
          vcpkg_cmake_configure(SOURCE_PATH "${SRC_PATH}")
          vcpkg_cmake_config_fixup(
            PACKAGE_NAME "boost_python${PV}"
            CONFIG_PATH "share/boost_python-${{ env.BOOST_VERSION }}"  # TODO
          )
          vcpkg_cmake_install()
        boost_cmakelists: |
          message(STATUS "Running boost-python CMakeLists")
          set(PV 3${{ matrix.python-minor }})
          project(boost_python${PV})
          add_custom_target(boost-python
            DEPENDS libboost_python${PV}.lib
          )
          add_custom_command(
            OUTPUT libboost_python${PV}.lib
            COMMAND cp "x64/Release/lib/libboost_python${PV}.lib" .
          )
          install(
            FILES
            "x64/Release/lib/libboost_python${PV}.lib"
            "x64/Release/lib/libboost_numpy${PV}.lib"
            TYPE LIB
          )
          install(
            DIRECTORY x64/Release/lib/cmake/
            DESTINATION share
            FILES_MATCHING PATTERN "*.cmake"
          )
          install(
            FILES "../boost/python.hpp"
            TYPE INCLUDE
          )
          install(
            DIRECTORY "../boost/python"
            TYPE INCLUDE
          )
          # TODO Install Numpy headers as well
      run: |
        echo "$boost_vcpkg" > vcpkg.json
        echo "$boost_portfile" > portfile.cmake
        echo "$boost_cmakelists" > CMakeLists.txt
      shell: bash

    - name: Save Cache
      uses: actions/cache/save@v4
      with:
        path: '${{ runner.workspace }}\boost_*.tar.gz'
        key: 'boost-${{env.BOOST_VERSION}}'